name: Test Vector Store (Altered)

on:
  workflow_dispatch:
    inputs:
      vs_id:
        description: "Vector Store ID (vs_...)"
        required: true
      prompt:
        description: "Frage/Prompt"
        required: false
        default: "Bitte nenne die Constructed-Deckregeln von Altered kurz auf Deutsch."

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install OpenAI SDK
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Query OpenAI (File Search)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}       # MUSS als Secret gesetzt sein
          VECTOR_STORE_ID: ${{ github.event.inputs.vs_id }}   # kommt aus dem "Run workflow"-Dialog
          PROMPT: ${{ github.event.inputs.prompt }}
        run: |
          python - <<'PY'
          import os, sys
          from openai import OpenAI

          api = os.environ.get("OPENAI_API_KEY")
          vs  = os.environ.get("VECTOR_STORE_ID")
          prompt = os.environ.get("PROMPT") or "Bitte nenne die Constructed-Deckregeln von Altered kurz auf Deutsch."

          if not api:
            print("❌ Missing secret: OPENAI_API_KEY", file=sys.stderr); sys.exit(1)
          if not vs or not vs.startswith("vs_"):
            print(f"❌ Invalid or missing VECTOR_STORE_ID: {vs!r}", file=sys.stderr); sys.exit(1)

          print(f"ℹ️  Using VECTOR_STORE_ID: {vs}")

          resp = client.responses.create(
    model="gpt-4.1-mini",               # Modell ist okay
    input=[{"role": "user", "content": prompt}],
    tools=[{"type": "file_search"}],
    tool_resources={                    # ⬅️ statt "attachments"
        "file_search": {
            "vector_store_ids": [vs]
        }
    },
)

          except Exception as e:
            print("❌ API call failed:", e, file=sys.stderr); sys.exit(1)

          print("\n=== OUTPUT_TEXT ===\n")
          print(resp.output_text)
          PY
