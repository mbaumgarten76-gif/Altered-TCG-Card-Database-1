name: Test Vector Store (Altered)

on:
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Call OpenAI Responses API (File Search)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          VECTOR_STORE_ID: ${{ secrets.OPENAI_VECTOR_STORE_ID }}  # oder trage testweise vs_... direkt hier ein
        run: |
          # Anfrage per curl senden
          RESP=$(curl -s https://api.openai.com/v1/responses \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<'JSON'
          {
            "model": "gpt-4.1-mini",
            "input": [{
              "role": "user",
              "content": "Bitte nenne die Constructed-Deckregeln von Altered kurz auf Deutsch."
            }],
            "tools": [{"type":"file_search"}],
            "attachments": [{"vector_store_id": "'"$VECTOR_STORE_ID"'"}]
          }
          JSON
          )
          echo "Raw JSON response:"
          echo "$RESP"

          # Den eigentlichen Antworttext herausziehen (kleines Python-Einzeilerchen auf dem Runner)
          python - <<'PY'
          import json, os
          resp = json.loads(os.environ["RESP_JSON"])
          print("\n=== OUTPUT_TEXT ===\n")
          print(resp.get("output_text") or resp)
          PY
        env:
          RESP_JSON: ${{ steps.test.outputs.resp_json }}
